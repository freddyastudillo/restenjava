create database smarttestdb;

\connect smarttestdb;

CREATE TABLE cliente (
  id_cliente int GENERATED BY DEFAULT AS IDENTITY
  (START WITH 100 INCREMENT BY 1),
  nombre varchar(45) NOT NULL,
  apellido varchar(45) NOT NULL,
  direccion varchar(45) NOT NULL,
  fecha_nacimiento date NOT NULL,
  telefono varchar(45) NOT NULL,
  email varchar(45) NOT NULL,
  PRIMARY KEY (id_cliente)
);

CREATE TABLE producto(
  id_producto int GENERATED BY DEFAULT AS IDENTITY
  (START WITH 200 INCREMENT BY 1),
  nombre varchar(45) NOT NULL,
  precio int NOT NULL,
  stock int NOT NULL,
  PRIMARY KEY (id_producto)
);

CREATE TABLE factura(
  num_factura int GENERATED BY DEFAULT AS IDENTITY
  (START WITH 1000 INCREMENT BY 1),
  fecha date NOT NULL,
  id_cliente int,
  FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente),
  PRIMARY KEY (num_factura)
);

CREATE TABLE detalle(
  num_detalle int GENERATED BY DEFAULT AS IDENTITY
  (START WITH 2000 INCREMENT BY 1),
  id_factura int,
  id_producto int,
  cantidad int NOT NULL,
  precio int,
  FOREIGN KEY (id_producto) REFERENCES producto(id_producto),
  FOREIGN KEY (id_factura) REFERENCES factura(num_factura),
  PRIMARY KEY (num_detalle,id_factura)
);

INSERT INTO cliente (nombre,apellido,direccion,fecha_nacimiento,telefono,email)
    VALUES ('Alex','Astudillo','Cll 45 Sur','2001/06/15','3134578654','freddy@email.com');

INSERT INTO cliente (nombre,apellido,direccion,fecha_nacimiento,telefono,email)
    VALUES ('Cristian','Lopez','Kra 20 Norte','1999/11/12','3114228445','criss@email.com');

INSERT INTO producto (nombre,precio,stock)
    VALUES ('Jabon de manos',12500,100);

INSERT INTO producto (nombre,precio,stock)
    VALUES ('Shampoo cabello',15000,150);

INSERT INTO factura(id_cliente,fecha)
    VALUES (100,CURRENT_DATE);

INSERT INTO factura(id_cliente,fecha)
    VALUES (100,CURRENT_DATE);

/*FUNCION PARA GUARDAR PRECIO EN EL DETALLE DE LA FACTURA SEGUN LA CANTIDAD*/
CREATE OR REPLACE FUNCTION actualizar_precio_detalle()
RETURNS TRIGGER AS
$$
DECLARE
  precio_producto INT;
  precio_total INT;
BEGIN

  SELECT precio INTO precio_producto
  FROM producto
  WHERE id_producto = NEW.id_producto
  LIMIT 1;

  precio_total := precio_producto * NEW.cantidad;

  UPDATE detalle
  SET precio = precio_total
  WHERE num_detalle = NEW.num_detalle AND id_factura = NEW.id_factura;

  RETURN NEW;
END;
$$
LANGUAGE plpgsql;
/*-------------------------------------------------------------------*/

/*TRIGgER PARA QUE SE EJECUTE DESPUES DE CADA INSERCION EN LA TABLA*/
CREATE TRIGGER after_insert_detalle
AFTER INSERT ON detalle
FOR EACH ROW
EXECUTE FUNCTION actualizar_precio_detalle();
/*-------------------------------------------------------------------*/

/*FUNCION PARA RESTAR STOCK SEGUN LA INSERCION EN DETALLE*/
CREATE OR REPLACE FUNCTION restar_stock_producto()
RETURNS TRIGGER AS
$$
BEGIN
  UPDATE producto
  SET stock = stock - NEW.cantidad
  WHERE id_producto = NEW.id_producto;

  RETURN NEW;
END;
$$
LANGUAGE plpgsql;
/*-------------------------------------------------------------------*/

/*TRIGgER PARA QUE SE EJECUTE DESPUES DE CADA INSERCION EN LA TABLA*/
CREATE TRIGGER after_insert_detalle_stock
AFTER INSERT ON detalle
FOR EACH ROW
EXECUTE FUNCTION restar_stock_producto();
/*-------------------------------------------------------------------*/

/*MAS DATOS POR DEFECTO*/
INSERT INTO detalle(id_factura,id_producto,cantidad)
    VALUES (1000,200,15);

INSERT INTO detalle(id_factura,id_producto,cantidad)
    VALUES (1000,201,20);



